name: ruhaniapp
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+3

environment:
  #sdk: '>=3.3.4 <4.0.0'
  sdk: ^3.6.1

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2

  # Circular animation on timer
  circular_countdown_timer: ^0.2.3

  #Displaying animations in app
  lottie: ^2.1.0

  #Convert speech
  speech_to_text: ^6.1.1

  #Dependency injection in app
  injectable: ^2.1.0

  #Playing asset sound "tttdddddrrrrrring"
  audioplayers: ^6.0.0

  #Routing in flutter
  auto_route: ^7.4.0

  #State management library
  flutter_bloc: ^8.1.1

  #Generate app state events
  freezed: ^2.4.2

  #get date in app
  intl: ^0.18.0

  #Permission asking in app
  permission_handler: ^10.2.0

  #creating states in app
  equatable: ^2.0.5

  #glow animation
  avatar_glow: ^2.0.2

  #internal directory for app
  path_provider: ^2.1.3

  #squlite and drift database in app
  drift: ^2.16.0
  sqlite3_flutter_libs: ^0.5.20

  #adding introduction images!!!
  introduction_screen: ^3.1.14

  #remember if intro screen was displayed aka auto_rememberer(what a weird name)
  shared_preferences: ^2.2.1

  #Authentication with Gmail
  firebase_core: ^3.12.0

  #get the user's details after the sign
  google_sign_in: ^6.2.2

  #save authentication details on firebaseðŸ”¥
  firebase_auth: ^5.5.0

  #saving lap details online instead of offline :)
  firebase_database: ^11.3.5

  #generate json code!!
  json_serializable: ^6.9.0

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

  #Generate injectable code
  injectable_generator: ^2.1.3

  #Route files generator
  auto_route_generator: ^7.1.1

  #Generating files
  build_runner: ^2.3.3

  #Generate freezed files
  freezed_annotation: ^2.4.1

  #code generator (aka grrrr) for drift
  drift_dev: ^2.16.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true
  assets:
    - assets/lottiefiles/
    - assets/images/
    - assets/sounds/
  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
